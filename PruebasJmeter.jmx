<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Web service CRM-UAPA-TRABAJO-FINAL">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Modulo Users">
        <intProp name="ThreadGroup.num_threads">200</intProp>
        <intProp name="ThreadGroup.ramp_time">60</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">3</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Authenticare" enabled="false">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/user/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;username&quot;: &quot;admin&quot;,&#xd;
    &quot;password&quot;: &quot;Ninguna22_&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Enconding</stringProp>
                <stringProp name="Header.value">utf-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Forwarded-For</stringProp>
                <stringProp name="Header.value">${__Random(1,255)}.${__Random(0,255)}.${__Random(0,255)}.${__Random(1,254)} </stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="List Users" enabled="false">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/user</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="false">
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper

// URL of the authentication endpoint
def authUrl = &apos;http://localhost:8000/api/v1/user/login&apos;  // Replace with your auth endpoint URL

// Create a URL object
def url = new URL(authUrl)
def connection = url.openConnection()

// Set request method and headers if needed
connection.setRequestMethod(&quot;POST&quot;)
connection.doOutput = true
connection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;)

// Create the JSON payload (adjust username/password as needed)
def requestBody = &apos;{&quot;username&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;Ninguna22_&quot;}&apos;
connection.outputStream.withWriter(&quot;UTF-8&quot;) { writer -&gt;
    writer.write(requestBody)
}

// Get the response
def responseCode = connection.responseCode
if(responseCode != 200) {
    log.error(&quot;Authentication failed. Response code: &quot; + responseCode)
    return
}
def responseBody = connection.inputStream.text

// Parse the JSON response
def jsonSlurper = new JsonSlurper()
def jsonResponse = jsonSlurper.parseText(responseBody)

// Extract the token from the response
def token = jsonResponse._data?.token
if (!token) {
    log.error(&quot;Token not found in authentication response&quot;)
    return
}

// Store the token in a JMeter variable
vars.put(&quot;token&quot;, token)
log.info(&quot;New token generated: &quot; + token)
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Enconding</stringProp>
                <stringProp name="Header.value">utf-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Forwarded-For</stringProp>
                <stringProp name="Header.value">${__Random(1,255)}.${__Random(0,255)}.${__Random(0,255)}.${__Random(1,254)} </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJraWQiOiIwZDhnS2JlOFFWbmZoK2JSZ3pCWUFoa2c2c1FtS3NnRXdKcHNwTDU4VElBPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxMWNiMzUzMC0zMGQxLTcwMGEtMjhjZi05YWJiYzE3NjBlNDAiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tXC91cy1lYXN0LTJfTDZISkpsYlNmIiwiY29nbml0bzp1c2VybmFtZSI6ImFkbWluIiwib3JpZ2luX2p0aSI6ImNkNDI4OGU4LWUxOWYtNDU0My1iMDc2LWE2M2RlODM1OWU2NiIsImF1ZCI6IjdnNHVnZ2ljNGNqdmJpNjlwZThxdWtubjYwIiwiZXZlbnRfaWQiOiJkMDM0ZjRmNy1mZGRmLTQ1MWEtOTg5Yi05MGY0YTVjNjYyNWIiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTc0Mjg3NjY0OSwibmFtZSI6ImFkbWluIiwiZXhwIjoxNzQyODgwMjQ5LCJpYXQiOjE3NDI4NzY2NDksImp0aSI6ImFmMTI3YzM3LTA0MWQtNGNlOC05MWRiLTVmZDAyNzcyZDEwMiIsImVtYWlsIjoiZGV2LmpvYW52YXNxdWV6QGdtYWlsLmNvbSJ9.cHdGwZdA7CXL6WtC1IW2QHljqji8P4GQ7PNCM3Bw6HSd8v38lKj48z24hGos3Vgl45--luZkPA84EDGt43sewUIFWlNE2yPq463aXtQIt_SMUV4DE9iC61UkCxDtryVsWN0Gh_gd57ErIL3ndnOE4s7yl4REX5zRO_RdUVc1CYhZYwbAn0F0dh3Fc13fXqfK19beh_FyNs4c4fT3y2BSK9uDGZSM5BknPH9bnItBvxoA76QvU5qNkUhOtRScneOMQ0DbT0mhm-IN-wF3VH88keUuzwDGmuwssIzYk8kseadnJYuqTwPFxKFJ9tALsEtIy0lyvnYb2hOfFeC7SVFgBw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies">
              <elementProp name="token" elementType="Cookie" testname="token">
                <stringProp name="Cookie.value">eyJraWQiOiIwZDhnS2JlOFFWbmZoK2JSZ3pCWUFoa2c2c1FtS3NnRXdKcHNwTDU4VElBPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxMWNiMzUzMC0zMGQxLTcwMGEtMjhjZi05YWJiYzE3NjBlNDAiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tXC91cy1lYXN0LTJfTDZISkpsYlNmIiwiY29nbml0bzp1c2VybmFtZSI6ImFkbWluIiwib3JpZ2luX2p0aSI6ImNkNDI4OGU4LWUxOWYtNDU0My1iMDc2LWE2M2RlODM1OWU2NiIsImF1ZCI6IjdnNHVnZ2ljNGNqdmJpNjlwZThxdWtubjYwIiwiZXZlbnRfaWQiOiJkMDM0ZjRmNy1mZGRmLTQ1MWEtOTg5Yi05MGY0YTVjNjYyNWIiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTc0Mjg3NjY0OSwibmFtZSI6ImFkbWluIiwiZXhwIjoxNzQyODgwMjQ5LCJpYXQiOjE3NDI4NzY2NDksImp0aSI6ImFmMTI3YzM3LTA0MWQtNGNlOC05MWRiLTVmZDAyNzcyZDEwMiIsImVtYWlsIjoiZGV2LmpvYW52YXNxdWV6QGdtYWlsLmNvbSJ9.cHdGwZdA7CXL6WtC1IW2QHljqji8P4GQ7PNCM3Bw6HSd8v38lKj48z24hGos3Vgl45--luZkPA84EDGt43sewUIFWlNE2yPq463aXtQIt_SMUV4DE9iC61UkCxDtryVsWN0Gh_gd57ErIL3ndnOE4s7yl4REX5zRO_RdUVc1CYhZYwbAn0F0dh3Fc13fXqfK19beh_FyNs4c4fT3y2BSK9uDGZSM5BknPH9bnItBvxoA76QvU5qNkUhOtRScneOMQ0DbT0mhm-IN-wF3VH88keUuzwDGmuwssIzYk8kseadnJYuqTwPFxKFJ9tALsEtIy0lyvnYb2hOfFeC7SVFgBw</stringProp>
                <stringProp name="Cookie.domain"></stringProp>
                <stringProp name="Cookie.path"></stringProp>
                <boolProp name="Cookie.secure">false</boolProp>
                <longProp name="Cookie.expires">0</longProp>
                <boolProp name="Cookie.path_specified">true</boolProp>
                <boolProp name="Cookie.domain_specified">true</boolProp>
              </elementProp>
            </collectionProp>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ger products">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/product</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="false">
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper

// URL of the authentication endpoint
def authUrl = &apos;http://localhost:8000/api/v1/user/login&apos;  // Replace with your auth endpoint URL

// Create a URL object
def url = new URL(authUrl)
def connection = url.openConnection()

// Set request method and headers if needed
connection.setRequestMethod(&quot;POST&quot;)
connection.doOutput = true
connection.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;)

// Create the JSON payload (adjust username/password as needed)
def requestBody = &apos;{&quot;username&quot;: &quot;admin&quot;, &quot;password&quot;: &quot;Ninguna22_&quot;}&apos;
connection.outputStream.withWriter(&quot;UTF-8&quot;) { writer -&gt;
    writer.write(requestBody)
}

// Get the response
def responseCode = connection.responseCode
if(responseCode != 200) {
    log.error(&quot;Authentication failed. Response code: &quot; + responseCode)
    return
}
def responseBody = connection.inputStream.text

// Parse the JSON response
def jsonSlurper = new JsonSlurper()
def jsonResponse = jsonSlurper.parseText(responseBody)

// Extract the token from the response
def token = jsonResponse._data?.token
if (!token) {
    log.error(&quot;Token not found in authentication response&quot;)
    return
}

// Store the token in a JMeter variable
vars.put(&quot;token&quot;, token)
log.info(&quot;New token generated: &quot; + token)
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Enconding</stringProp>
                <stringProp name="Header.value">utf-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Forwarded-For</stringProp>
                <stringProp name="Header.value">${__Random(1,255)}.${__Random(0,255)}.${__Random(0,255)}.${__Random(1,254)} </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJraWQiOiIwZDhnS2JlOFFWbmZoK2JSZ3pCWUFoa2c2c1FtS3NnRXdKcHNwTDU4VElBPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxMWNiMzUzMC0zMGQxLTcwMGEtMjhjZi05YWJiYzE3NjBlNDAiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tXC91cy1lYXN0LTJfTDZISkpsYlNmIiwiY29nbml0bzp1c2VybmFtZSI6ImFkbWluIiwib3JpZ2luX2p0aSI6ImNkNDI4OGU4LWUxOWYtNDU0My1iMDc2LWE2M2RlODM1OWU2NiIsImF1ZCI6IjdnNHVnZ2ljNGNqdmJpNjlwZThxdWtubjYwIiwiZXZlbnRfaWQiOiJkMDM0ZjRmNy1mZGRmLTQ1MWEtOTg5Yi05MGY0YTVjNjYyNWIiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTc0Mjg3NjY0OSwibmFtZSI6ImFkbWluIiwiZXhwIjoxNzQyODgwMjQ5LCJpYXQiOjE3NDI4NzY2NDksImp0aSI6ImFmMTI3YzM3LTA0MWQtNGNlOC05MWRiLTVmZDAyNzcyZDEwMiIsImVtYWlsIjoiZGV2LmpvYW52YXNxdWV6QGdtYWlsLmNvbSJ9.cHdGwZdA7CXL6WtC1IW2QHljqji8P4GQ7PNCM3Bw6HSd8v38lKj48z24hGos3Vgl45--luZkPA84EDGt43sewUIFWlNE2yPq463aXtQIt_SMUV4DE9iC61UkCxDtryVsWN0Gh_gd57ErIL3ndnOE4s7yl4REX5zRO_RdUVc1CYhZYwbAn0F0dh3Fc13fXqfK19beh_FyNs4c4fT3y2BSK9uDGZSM5BknPH9bnItBvxoA76QvU5qNkUhOtRScneOMQ0DbT0mhm-IN-wF3VH88keUuzwDGmuwssIzYk8kseadnJYuqTwPFxKFJ9tALsEtIy0lyvnYb2hOfFeC7SVFgBw</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
            <collectionProp name="CookieManager.cookies">
              <elementProp name="token" elementType="Cookie" testname="token">
                <stringProp name="Cookie.value">eyJraWQiOiIwZDhnS2JlOFFWbmZoK2JSZ3pCWUFoa2c2c1FtS3NnRXdKcHNwTDU4VElBPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIxMWNiMzUzMC0zMGQxLTcwMGEtMjhjZi05YWJiYzE3NjBlNDAiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tXC91cy1lYXN0LTJfTDZISkpsYlNmIiwiY29nbml0bzp1c2VybmFtZSI6ImFkbWluIiwib3JpZ2luX2p0aSI6ImNkNDI4OGU4LWUxOWYtNDU0My1iMDc2LWE2M2RlODM1OWU2NiIsImF1ZCI6IjdnNHVnZ2ljNGNqdmJpNjlwZThxdWtubjYwIiwiZXZlbnRfaWQiOiJkMDM0ZjRmNy1mZGRmLTQ1MWEtOTg5Yi05MGY0YTVjNjYyNWIiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTc0Mjg3NjY0OSwibmFtZSI6ImFkbWluIiwiZXhwIjoxNzQyODgwMjQ5LCJpYXQiOjE3NDI4NzY2NDksImp0aSI6ImFmMTI3YzM3LTA0MWQtNGNlOC05MWRiLTVmZDAyNzcyZDEwMiIsImVtYWlsIjoiZGV2LmpvYW52YXNxdWV6QGdtYWlsLmNvbSJ9.cHdGwZdA7CXL6WtC1IW2QHljqji8P4GQ7PNCM3Bw6HSd8v38lKj48z24hGos3Vgl45--luZkPA84EDGt43sewUIFWlNE2yPq463aXtQIt_SMUV4DE9iC61UkCxDtryVsWN0Gh_gd57ErIL3ndnOE4s7yl4REX5zRO_RdUVc1CYhZYwbAn0F0dh3Fc13fXqfK19beh_FyNs4c4fT3y2BSK9uDGZSM5BknPH9bnItBvxoA76QvU5qNkUhOtRScneOMQ0DbT0mhm-IN-wF3VH88keUuzwDGmuwssIzYk8kseadnJYuqTwPFxKFJ9tALsEtIy0lyvnYb2hOfFeC7SVFgBw</stringProp>
                <stringProp name="Cookie.domain"></stringProp>
                <stringProp name="Cookie.path"></stringProp>
                <boolProp name="Cookie.secure">false</boolProp>
                <longProp name="Cookie.expires">0</longProp>
                <boolProp name="Cookie.path_specified">true</boolProp>
                <boolProp name="Cookie.domain_specified">true</boolProp>
              </elementProp>
            </collectionProp>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
